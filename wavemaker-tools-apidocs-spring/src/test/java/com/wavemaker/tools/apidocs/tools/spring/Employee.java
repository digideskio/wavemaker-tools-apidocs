/**
 * Copyright Â© 2013 - 2017 WaveMaker, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.wavemaker.tools.apidocs.tools.spring;
// Generated 19 Nov, 2014 12:15:13 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;
import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

import static javax.persistence.GenerationType.IDENTITY;


/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "EMPLOYEE"
        , schema = "PUBLIC"
        , catalog = "PUBLIC"
)
public class Employee implements java.io.Serializable {

    @NotNull
    private Integer eid;
    private Department department;
    private Employee employee;
    @JsonProperty(required = true)
    private String firstname;
    private String lastname;
    private String street;
    private String city;
    private String state;
    private String zip;
    @JsonProperty(value = "birthDate", required = true)
    private Date birthdate;
    private String picurl;
    private BigDecimal twitterid;
    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
    private BigInteger tenantid;
    private Set<Employee> employees = new HashSet<Employee>(0);
    private Set<Vacation> vacations = new HashSet<Vacation>(0);

    public Employee() {
    }


    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "EID", unique = true, nullable = false)
    public Integer getEid() {
        return this.eid;
    }

    public void setEid(Integer eid) {
        this.eid = eid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "DEPTID")
    public Department getDepartment() {
        return this.department;
    }

    public void setDepartment(Department department) {
        this.department = department;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "MANAGERID")
    public Employee getEmployee() {
        return this.employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }


    @Column(name = "FIRSTNAME")
    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }


    @Column(name = "LASTNAME")
    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }


    @Column(name = "STREET")
    public String getStreet() {
        return this.street;
    }

    public void setStreet(String street) {
        this.street = street;
    }


    @Column(name = "CITY")
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }


    @Column(name = "STATE", length = 2)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @NotNull
    @Column(name = "ZIP")
    public String getZip() {
        return this.zip;
    }

    public void setZip(String zip) {
        this.zip = zip;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "BIRTHDATE", length = 10)
    public Date getBirthdate() {
        return this.birthdate;
    }

    public void setBirthdate(Date birthdate) {
        this.birthdate = birthdate;
    }


    @Column(name = "PICURL")
    public String getPicurl() {
        return this.picurl;
    }

    public void setPicurl(String picurl) {
        this.picurl = picurl;
    }


    @Column(name = "TWITTERID", length = 40)
    public BigDecimal getTwitterid() {
        return this.twitterid;
    }

    @NotNull
    public void setTwitterid(BigDecimal twitterid) {
        this.twitterid = twitterid;
    }


    @Column(name = "TENANTID")
    public BigInteger getTenantid() {
        return this.tenantid;
    }

    public void setTenantid(BigInteger tenantid) {
        this.tenantid = tenantid;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy = "employee")
    public Set<Employee> getEmployees() {
        return this.employees;
    }

    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

    @OneToMany(fetch = FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy = "employee")
    public Set<Vacation> getVacations() {
        return this.vacations;
    }

    public void setVacations(Set<Vacation> vacations) {
        this.vacations = vacations;
    }


}

